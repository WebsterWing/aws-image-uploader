{"version":3,"sources":["UserProfile.js","UserProfiles.js","App.js","reportWebVitals.js","index.js"],"names":["UserProfile","uuid","username","userProfileImageLink","updateProfile","onDrop","useCallback","acceptedFiles","file","formData","FormData","append","axios","post","headers","then","res","console","log","data","catch","err","useDropzone","getRootProps","getInputProps","isDragActive","dropzoneClassName","className","src","UserProfiles","useState","userProfiles","setUserProfiles","useEffect","get","toJSON","newProfile","map","oldProfile","profile","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPAIe,SAASA,EAAT,GAA6E,IAAvDC,EAAsD,EAAtDA,KAAMC,EAAgD,EAAhDA,SAAUC,EAAsC,EAAtCA,qBAAsBC,EAAgB,EAAhBA,cACnEC,EAASC,uBAAY,SAAAC,GACzB,IAAMC,EAAOD,EAAc,GAErBE,EAAW,IAAIC,SACrBD,EAASE,OAAO,OAAQH,GAExBI,IAAMC,KAAN,+BAC0BZ,EAD1B,UAEEQ,EACA,CACEK,QAAS,CACP,eAAgB,yBAGpBC,MAAK,SAAAC,GACLC,QAAQC,IAAI,6BACZD,QAAQC,IAAIF,EAAIG,MAChBf,EAAcY,EAAIG,SACjBC,OAAM,SAAAC,GACPJ,QAAQC,IAAIG,QAEb,CAACpB,EAAMG,IAtB+E,EAwBrCkB,YAAY,CAACjB,WAA1DkB,EAxBkF,EAwBlFA,aAAcC,EAxBoE,EAwBpEA,cAAeC,EAxBqD,EAwBrDA,aAE9BC,EAAiB,mBAAeD,EAAe,kBAAoB,IACzE,OACE,sBAAKE,UAAU,cAAf,UACIxB,EAEA,qBACEyB,IAAKzB,IAEP,KAEF,6BAAKD,IACL,8CAAKyB,UAAWD,GAAuBH,KAAvC,cACE,qCAAWC,MACX,4BAEEC,EACE,0BACA,kEAKN,4BAAIxB,OC/CK,SAAS4B,IAAgB,IAAD,EAEGC,mBAAS,IAFZ,mBAE9BC,EAF8B,KAEhBC,EAFgB,KAIrCC,qBAAU,WACRrB,IAAMsB,IAAI,wBACPnB,MAAK,SAAAC,GACJC,QAAQC,IAAIF,GADD,IAEJG,EAAQH,EAARG,KACPa,EAAgBb,MACfC,OAAM,SAAAC,GACPJ,QAAQC,IAAIG,EAAIc,eAEnB,IAEH,IAAM/B,EAAgB,SAAAgC,GACpBJ,EAAgBD,EAAaM,KAAI,SAAAC,GAC/B,OAAIA,EAAWrC,OAASmC,EAAWnC,KAC1BmC,EAEAE,OAKb,OACE,8BACGP,EAAaM,KAAI,SAAAE,GAChB,OAAO,cAACvC,EAAD,aAAgCI,cAAeA,GAAmBmC,GAAhDA,EAAQtC,W,MCpB1BuC,MARf,WACE,OACE,qBAAKb,UAAU,MAAf,SACE,cAACE,EAAD,OCISY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB5B,MAAK,YAAkD,IAA/C6B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c1f91d55.chunk.js","sourcesContent":["import axios from 'axios'\r\nimport React, {useCallback} from 'react'\r\nimport {useDropzone} from 'react-dropzone'\r\n\r\nexport default function UserProfile({uuid, username, userProfileImageLink, updateProfile}) {\r\n  const onDrop = useCallback(acceptedFiles => {\r\n    const file = acceptedFiles[0]\r\n    //axios.post(`http://localhost:8080/api/v1/user-profile/${uuid}/image`)\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n\r\n    axios.post(\r\n      `/api/v1/user-profile/${uuid}/image`,\r\n      formData,\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\"\r\n        }\r\n      }\r\n    ).then(res => {\r\n      console.log(\"File uploaded sucessfully\")\r\n      console.log(res.data)\r\n      updateProfile(res.data)\r\n    }).catch(err => {\r\n      console.log(err)\r\n    })\r\n  }, [uuid, updateProfile])\r\n\r\n  const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop})\r\n\r\n  const dropzoneClassName = `dropzone ${isDragActive ? 'dropzone-active' : ''}`\r\n  return (\r\n    <div className=\"userProfile\">\r\n      { userProfileImageLink\r\n      // eslint-disable-next-line jsx-a11y/alt-text\r\n      ? <img \r\n          src={userProfileImageLink}  \r\n        />\r\n      : null }\r\n      {/* TODO: display profile image here */}\r\n      <h1>{username}</h1>\r\n      <div className={dropzoneClassName} {...getRootProps()}>\r\n        <input {...getInputProps()} />\r\n        <p>\r\n        {\r\n          isDragActive ?\r\n            'Drop the files here ...' :\r\n            'Drag \\'n drop a profile image here, or click to select one'\r\n        }\r\n        </p>\r\n      </div>\r\n      \r\n      <p>{uuid}</p>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect} from \"react\";\r\nimport axios from \"axios\";\r\nimport UserProfile from \"./UserProfile\";\r\n\r\n\r\nexport default function UserProfiles() {\r\n\r\n  const [userProfiles, setUserProfiles] = useState([])\r\n\r\n  useEffect(() => {\r\n    axios.get(\"/api/v1/user-profile\")\r\n      .then(res => {\r\n        console.log(res);\r\n        const {data} = res;\r\n        setUserProfiles(data)\r\n      }).catch(err=> {\r\n        console.log(err.toJSON())\r\n      })\r\n  }, [])\r\n\r\n  const updateProfile = newProfile => {\r\n    setUserProfiles(userProfiles.map(oldProfile => {\r\n      if (oldProfile.uuid === newProfile.uuid) {\r\n        return newProfile\r\n      } else {\r\n        return oldProfile\r\n      }\r\n    }))\r\n  }\r\n  \r\n  return (\r\n    <div>\r\n      {userProfiles.map(profile => {\r\n        return <UserProfile key={profile.uuid} updateProfile={updateProfile} {...profile} />\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\";\nimport UserProfiles from \"./UserProfiles\"\nimport './App.css';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <UserProfiles />\n    </div>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}